package tv.wouri.azure.repositories;

import tv.wouri.azure.models.*;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;

import java.util.List;

public interface TTransactionmutualisteRepository extends JpaRepository<SMutualiste, Integer> {

    @Query(value = "SELECT TMID, TMTYPE, TMNUMERO, MUNUMERO, date(TMDATE) AS TMDATE,  TMLIBELLE , TMDEBIT, TMCREDIT, (SELECT SUM(TMCREDIT)- SUM(TMDEBIT)\n" + "FROM t_transactionmutualiste t2 WHERE (t2.TMID <= t1.TMID) AND (t2.MUNUMERO = ?1)) AS TMSOLDE FROM t_transactionmutualiste t1\n" + "where (t1.MUNUMERO = ?1) order by TMID DESC LIMIT 0,?2", nativeQuery = true)
    List<TTransactionmutualiste> findMutualisteTransaction(Integer numero, Integer taille);

    @Query(value = "SELECT P.PRNUMERO, P.PRDATEPAI, M.MUMATRICULE, M.MUNOM, M.MUPRENOM, P.PRMONTANTACCORDE, \n" + "PRFRAISGESTION, CONCAT(M.MUNOM,\" \",M.MUPRENOM) AS NOM, TPLIBELLE, \n" + "SUM(R.ERMONTANTPAYE) AS REMBOURSE, P.PRMONTANTACCORDE-SUM(R.ERMONTANTPAYE) AS ENCOURS,\n" + "CONCAT(EXTRACT(MONTH FROM MAX(R.ERDATE)),\"/\",EXTRACT(YEAR FROM MAX(R.ERDATE))) AS ECHEANCE \n" + "FROM T_PRET P JOIN T_ECHEANCEREMBOURSEMENT R ON P.PRNUMERO = R.PRNUMERO JOIN S_MUTUALISTE  M ON M.MUNUMERO = P.MUNUMERO JOIN S_TYPEPRET  T ON T.TPCODE = P.TPCODE WHERE (P.PRSTATUT = \"PAI\") AND (M.MUMATRICULE = ?1)  \n" + "GROUP BY P.PRNUMERO, P.PRDATEPAI, M.MUMATRICULE, M.MUNOM, M.MUPRENOM, P.PRMONTANTACCORDE,  PRFRAISGESTION, M.CACODE, TPLIBELLE HAVING (P.PRMONTANTACCORDE-SUM(R.ERMONTANTPAYE)) <> 0 ORDER BY M.MUNOM, M.MUPRENOM LIMIT 0,?2", nativeQuery = true)
    List<TPretMutualiste> findEncoursPretMutualiste(Integer numero, Integer taille);

    @Query(value = "SELECT P.PRNUMERO, P.PRDATEPAI, M.MUMATRICULE, M.MUNOM, M.MUPRENOM, P.PRMONTANTACCORDE, PRFRAISGESTION, CONCAT(M.MUNOM,\" \",M.MUPRENOM) AS NOM, TPLIBELLE FROM T_PRET P JOIN T_ECHEANCEREMBOURSEMENT R ON P.PRNUMERO = R.PRNUMERO JOIN S_MUTUALISTE  M ON M.MUNUMERO = P.MUNUMERO JOIN S_TYPEPRET  T ON T.TPCODE = P.TPCODE WHERE (P.PRSTATUT = \"SAI\") AND (M.MUMATRICULE = ?1) LIMIT 0,?2", nativeQuery = true)
    List<TPretMutualisePending> findValidationPretMutualiste(Integer numero, Integer taille);

    @Query(value = "SELECT P.PRNUMERO, P.PRDATEPAI, M.MUMATRICULE, M.MUNOM, M.MUPRENOM, P.PRMONTANTACCORDE, PRFRAISGESTION, CONCAT(M.MUNOM,\" \",M.MUPRENOM) AS NOM, TPLIBELLE FROM T_PRET P JOIN T_ECHEANCEREMBOURSEMENT R ON P.PRNUMERO = R.PRNUMERO JOIN S_MUTUALISTE  M ON M.MUNUMERO = P.MUNUMERO JOIN S_TYPEPRET  T ON T.TPCODE = P.TPCODE WHERE (P.PRSTATUT = \"VAL\") AND (M.MUMATRICULE = ?1) LIMIT 0,?2", nativeQuery = true)
    List<TPretMutualisePending> findEncaissementPretMutualiste(Integer numero, Integer taille);

    @Query(value = "SELECT MUNUMERO, sum(COMONTANTRETRAITE) AS RETRAITE, sum(COMONTANTSECOURS) AS SECOURS, sum(COMONTANTCOTISE) AS TOTALCOTISE  FROM T_COTISATION  WHERE (MUNUMERO = ?1)", nativeQuery = true)
    TCotisation findCumulCotisationMutualiste(Integer numero);

    @Query(value = "SELECT NULL AS TMNUMERO, NULL AS TMDATE, CONCAT(\"SOLDE AU  \",?1,\" -- \") AS TMLIBELLE, NULL AS TMDEBIT,  NULL AS TMCREDIT,\n" + "(SELECT COALESCE(SUM(TMCREDIT-TMDEBIT),0) FROM t_transactionmutualiste t3\n" + "WHERE (date(t3.TMDATE) <= ?1) AND (t3.MUNUMERO = ?3)) AS SOLDE\n" + "UNION\n" + "SELECT TMID AS TMNUMERO, date(TMDATE) AS TMDATE,  TMLIBELLE , TMDEBIT, TMCREDIT, (SELECT SUM(TMCREDIT)- SUM(TMDEBIT) FROM t_transactionmutualiste t2 WHERE (t2.TMID <= t1.TMID) AND \n" + "(t2.MUNUMERO = ?3)) AS SOLDE FROM t_transactionmutualiste t1 where (t1.MUNUMERO = ?3) and (date(t1.TMDATE) >= ?1) AND (date(t1.TMDATE) <= ?2) LIMIT 0,?4", nativeQuery = true)
    List<THistoriqueMutualiste> findHistoriqueMvtMutualiste(String debut, String fin, Integer numero, Integer taille);

    @Query(value = "SELECT NULL AS TMNUMERO, NULL AS TMDATE, CONCAT(\"SOLDE AU  \",?1,\" -- \") AS TMLIBELLE, NULL AS TMDEBIT,  NULL AS TMCREDIT,\n" + "(SELECT COALESCE(SUM(TMCREDIT-TMDEBIT),0) FROM t_transactionmutualiste t3\n" + "WHERE (date(t3.TMDATE) <= ?1) AND (t3.MUNUMERO = ?3)) AS SOLDE\n" + "UNION\n" + "SELECT TMID AS TMNUMERO, date(TMDATE) AS TMDATE,  TMLIBELLE , TMDEBIT, TMCREDIT, (SELECT SUM(TMCREDIT)- SUM(TMDEBIT) FROM t_transactionmutualiste t2 WHERE (t2.TMID <= t1.TMID) AND \n" + "(t2.MUNUMERO = ?3)) AS SOLDE FROM t_transactionmutualiste t1 where (t1.MUNUMERO = ?3) and (date(t1.TMDATE) >= ?1) AND (date(t1.TMDATE) <= ?2)", nativeQuery = true)
    Page<THistoriqueMutualiste> findAllHistoriqueMvtMutualiste(String debut, String fin, Integer numero, Pageable pageable);

    @Query(value = "SELECT NULL AS TMNUMERO, NULL AS TMDATE, CONCAT(\"SOLDE AU  \",?1,\" -- \") AS TMLIBELLE, NULL AS TMDEBIT,  NULL AS TMCREDIT,\n" + "(SELECT COALESCE(SUM(TMCREDIT-TMDEBIT),0) FROM t_transactionmutualiste t3\n" + "WHERE (date(t3.TMDATE) <= ?1) AND (t3.MUNUMERO = ?3)) AS SOLDE\n" + "UNION\n" + "SELECT TMID AS TMNUMERO, date(TMDATE) AS TMDATE,  TMLIBELLE , TMDEBIT, TMCREDIT, (SELECT SUM(TMCREDIT)- SUM(TMDEBIT) FROM t_transactionmutualiste t2 WHERE (t2.TMID <= t1.TMID) AND \n" + "(t2.MUNUMERO = ?3)) AS SOLDE FROM t_transactionmutualiste t1 where (t1.MUNUMERO = ?3) and (date(t1.TMDATE) >= ?1) AND (date(t1.TMDATE) <= ?2)", nativeQuery = true)
    List<THistoriqueMutualiste> findAllHistoriqueMvtMutualiste1(String debut, String fin, Integer numero);

    @Query(value = "SELECT A.ANNEE, +\n" + "COALESCE(JANV.COMONTANTRETRAITE,0) AS R_JANV, COALESCE(JANV.COMONTANTSECOURS,0) AS S_JANV, COALESCE(FEV.COMONTANTRETRAITE,0) AS R_FEV, COALESCE(FEV.COMONTANTSECOURS,0) AS S_FEV, \n" + "COALESCE(MARS.COMONTANTRETRAITE,0) AS R_MARS, COALESCE(MARS.COMONTANTSECOURS,0) AS S_MARS, COALESCE(AVRIL.COMONTANTRETRAITE,0) AS R_AVRIL, COALESCE(AVRIL.COMONTANTSECOURS,0) AS S_AVRIL, \n" + "COALESCE(MAI.COMONTANTRETRAITE,0) AS R_MAI, COALESCE(MAI.COMONTANTSECOURS,0) AS S_MAI, COALESCE(JUIN.COMONTANTRETRAITE,0) AS R_JUIN, COALESCE(JUIN.COMONTANTSECOURS,0) AS S_JUIN, \n" + "COALESCE(JUIL.COMONTANTRETRAITE,0) AS R_JUIL, COALESCE(JUIL.COMONTANTSECOURS,0) AS S_JUIL, COALESCE(AOUT.COMONTANTRETRAITE,0) AS R_AOUT, COALESCE(AOUT.COMONTANTSECOURS,0) AS S_AOUT, \n" + "COALESCE(SEPT.COMONTANTRETRAITE,0) AS R_SEPT, COALESCE(SEPT.COMONTANTSECOURS,0) AS S_SEPT, COALESCE(OCT.COMONTANTRETRAITE,0) AS R_OCT, COALESCE(OCT.COMONTANTSECOURS,0) AS S_OCT, \n" + "COALESCE(NOV.COMONTANTRETRAITE,0) AS R_NOV, COALESCE(NOV.COMONTANTSECOURS,0) AS S_NOV, COALESCE(DECE.COMONTANTRETRAITE,0) AS R_DECE, COALESCE(DECE.COMONTANTSECOURS,0) AS S_DECE, \n" + "(COALESCE(JANV.COMONTANTRETRAITE,0)+COALESCE(FEV.COMONTANTRETRAITE,0) + COALESCE(MARS.COMONTANTRETRAITE,0) + COALESCE(AVRIL.COMONTANTRETRAITE,0) + \n" +"COALESCE(MAI.COMONTANTRETRAITE,0)+COALESCE(JUIN.COMONTANTRETRAITE,0) + COALESCE(JUIL.COMONTANTRETRAITE,0) + COALESCE(AOUT.COMONTANTRETRAITE,0) + \n" + "COALESCE(SEPT.COMONTANTRETRAITE,0)+ COALESCE(OCT.COMONTANTRETRAITE,0) + COALESCE(NOV.COMONTANTRETRAITE,0) + COALESCE(DECE.COMONTANTRETRAITE,0)) AS TOTALRETRAITE, \n" + "(COALESCE(JANV.COMONTANTSECOURS,0) + COALESCE(FEV.COMONTANTSECOURS,0) + COALESCE(MARS.COMONTANTSECOURS,0) + COALESCE(AVRIL.COMONTANTSECOURS,0) + \n" + "COALESCE(MAI.COMONTANTSECOURS,0) + COALESCE(JUIN.COMONTANTSECOURS,0) + COALESCE(JUIL.COMONTANTSECOURS,0) + COALESCE(AOUT.COMONTANTSECOURS,0) + \n" + "COALESCE(SEPT.COMONTANTSECOURS,0) + COALESCE(OCT.COMONTANTSECOURS,0) + COALESCE(NOV.COMONTANTSECOURS,0) + COALESCE(DECE.COMONTANTSECOURS,0)) AS TOTALSECOURS, \n" + "(COALESCE(JANV.COMONTANTRETRAITE,0) + COALESCE(FEV.COMONTANTRETRAITE,0) + COALESCE(MARS.COMONTANTRETRAITE,0) + COALESCE(AVRIL.COMONTANTRETRAITE,0) + \n" + "COALESCE(MAI.COMONTANTRETRAITE,0) + COALESCE(JUIN.COMONTANTRETRAITE,0) + COALESCE(JUIL.COMONTANTRETRAITE,0) + COALESCE(AOUT.COMONTANTRETRAITE,0) + \n" + "COALESCE(SEPT.COMONTANTRETRAITE,0) + COALESCE(OCT.COMONTANTRETRAITE,0) + COALESCE(NOV.COMONTANTRETRAITE,0) + COALESCE(DECE.COMONTANTRETRAITE,0)) + \n" + "(COALESCE(JANV.COMONTANTSECOURS,0) + COALESCE(FEV.COMONTANTSECOURS,0) + COALESCE(MARS.COMONTANTSECOURS,0) + COALESCE(AVRIL.COMONTANTSECOURS,0) + \n" + "COALESCE(MAI.COMONTANTSECOURS,0) + COALESCE(JUIN.COMONTANTSECOURS,0) + COALESCE(JUIL.COMONTANTSECOURS,0) + COALESCE(AOUT.COMONTANTSECOURS,0) + \n" + "COALESCE(SEPT.COMONTANTSECOURS,0) + COALESCE(OCT.COMONTANTSECOURS,0) + COALESCE(NOV.COMONTANTSECOURS,0) + COALESCE(DECE.COMONTANTSECOURS,0)) AS TOTALCOTISE \n" + "FROM      (SELECT DISTINCT COANNEE AS ANNEE FROM T_COTISATION WHERE CODATESAI IS NOT NULL ORDER BY COANNEE ASC) A \n" + "LEFT JOIN (SELECT COANNEE AS ANNEE, COMOISPAIE AS MOIS, COMONTANTRETRAITE, COMONTANTSECOURS FROM T_COTISATION WHERE (COMOISPAIE = 1) AND (COSTATUT = \"PAI\") AND MUNUMERO = ?1) JANV ON JANV.ANNEE = A.ANNEE \n" + "LEFT JOIN (SELECT COANNEE AS ANNEE, COMOISPAIE AS MOIS, COMONTANTRETRAITE, COMONTANTSECOURS FROM T_COTISATION WHERE (COMOISPAIE = 2) AND (COSTATUT = \"PAI\") AND MUNUMERO = ?1) FEV ON FEV.ANNEE = A.ANNEE LEFT JOIN (SELECT COANNEE AS ANNEE, COMOISPAIE AS MOIS, COMONTANTRETRAITE, COMONTANTSECOURS FROM T_COTISATION WHERE (COMOISPAIE = 3) AND (COSTATUT = \"PAI\") AND MUNUMERO = ?1) MARS ON MARS.ANNEE = A.ANNEE \n" + "LEFT JOIN (SELECT COANNEE AS ANNEE, COMOISPAIE AS MOIS, COMONTANTRETRAITE, COMONTANTSECOURS FROM T_COTISATION WHERE (COMOISPAIE = 4) AND (COSTATUT = \"PAI\") AND MUNUMERO = ?1) AVRIL ON AVRIL.ANNEE = A.ANNEE \n" + "LEFT JOIN (SELECT COANNEE AS ANNEE, COMOISPAIE AS MOIS, COMONTANTRETRAITE, COMONTANTSECOURS FROM T_COTISATION WHERE (COMOISPAIE = 5) AND (COSTATUT = \"PAI\") AND MUNUMERO = ?1) MAI ON MAI.ANNEE = A.ANNEE \n" +"LEFT JOIN (SELECT COANNEE AS ANNEE, COMOISPAIE AS MOIS, COMONTANTRETRAITE, COMONTANTSECOURS FROM T_COTISATION WHERE (COMOISPAIE = 6) AND (COSTATUT = \"PAI\") AND MUNUMERO = ?1) JUIN ON JUIN.ANNEE = A.ANNEE \n" + "LEFT JOIN (SELECT COANNEE AS ANNEE, COMOISPAIE AS MOIS, COMONTANTRETRAITE, COMONTANTSECOURS FROM T_COTISATION WHERE (COMOISPAIE = 7) AND (COSTATUT = \"PAI\") AND MUNUMERO = ?1) JUIL ON JUIL.ANNEE = A.ANNEE \n" +"LEFT JOIN (SELECT COANNEE AS ANNEE, COMOISPAIE AS MOIS, COMONTANTRETRAITE, COMONTANTSECOURS FROM T_COTISATION WHERE (COMOISPAIE = 8) AND (COSTATUT = \"PAI\") AND MUNUMERO = ?1) AOUT ON AOUT.ANNEE = A.ANNEE \n" + "LEFT JOIN (SELECT COANNEE AS ANNEE, COMOISPAIE AS MOIS, COMONTANTRETRAITE, COMONTANTSECOURS FROM T_COTISATION WHERE (COMOISPAIE = 9) AND (COSTATUT = \"PAI\") AND MUNUMERO = ?1) SEPT ON SEPT.ANNEE = A.ANNEE \n" +"LEFT JOIN (SELECT COANNEE AS ANNEE, COMOISPAIE AS MOIS, COMONTANTRETRAITE, COMONTANTSECOURS FROM T_COTISATION WHERE (COMOISPAIE = 10) AND (COSTATUT = \"PAI\") AND MUNUMERO = ?1) OCT ON OCT.ANNEE = A.ANNEE \n" +"LEFT JOIN (SELECT COANNEE AS ANNEE, COMOISPAIE AS MOIS, COMONTANTRETRAITE, COMONTANTSECOURS FROM T_COTISATION WHERE (COMOISPAIE = 11) AND (COSTATUT = \"PAI\") AND MUNUMERO = ?1) NOV ON NOV.ANNEE = A.ANNEE \n" + "LEFT JOIN (SELECT COANNEE AS ANNEE, COMOISPAIE AS MOIS, COMONTANTRETRAITE, COMONTANTSECOURS FROM T_COTISATION WHERE (COMOISPAIE = 12) AND (COSTATUT = \"PAI\") AND MUNUMERO = ?1) DECE ON DECE.ANNEE = A.ANNEE;", nativeQuery = true)
    List<TSituationMutualiste> findSituationMtualiste(Integer numero);

}
